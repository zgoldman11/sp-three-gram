"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var event_1 = require("./event");
/** A version of the Event class that takes no data and emits no data, it emitting is a signal alone */
var Signal = /** @class */ (function (_super) {
    __extends(Signal, _super);
    function Signal() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Emits the event as a signal that the event occurred (with no data)
     *
     * Returns true if the event had listeners, false otherwise
     * @returns true if the event had listeners, false otherwise
     */
    Signal.prototype.emit = function () {
        return _super.prototype.emit.call(this, undefined);
    };
    return Signal;
}(event_1.Event));
exports.Signal = Signal;
//# sourceMappingURL=signal.js.map